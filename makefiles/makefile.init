
OBJECTSSRC:=src
HEADERSSRC:=include

ifdef MINGW
COMPILER=x86_64-w64-mingw32-
else
COMPILER=
endif

# preprocessor
CPP = $(COMPILER)cpp
# C compiler
CC = $(COMPILER)gcc
# C++ compiler
CXX = $(COMPILER)g++

# Standard flags (common for CC and CXX)
COMMON_FLAGS:=-Wall -Wextra -Werror
LOCAL_COMMON_FLAGS:=

# Standard flags for C
CFLAGS:=
LOCAL_CFLAGS:=

# Standard flags for C++
CXXFLAGS:=
LOCAL_CXXFLAGS:=

# Standard linker flags
LDFLAGS=
SHARED_LDFLAGS=-fPIC -shared -Wl,--no-undefined

CPPDEPS=-MT$@ -MF`echo $@ | sed -e 's,\.o$$,.d,'` -MMD

LINKTYPE=

DEBUG_COMMON_FLAGS:=-g -O0
DEBUG_CFLAGS:=
DEBUG_CXXFLAGS:=
DEBUG_LDFLAGS:=-g -O0
RELEASE_COMMON_FLAGS:=-O3
RELEASE_CFLAGS:=
RELEASE_CXXFLAGS:=
RELEASE_LDFLAGS:=-s

GLOBAL_COMMON_FLAGS:=
EXTRA_COMMON_FLAGS:=
GLOBAL_CFLAGS:=
EXTRA_CFLAGS:=
GLOBAL_CXXFLAGS:=
EXTRA_CXXFLAGS:=
GLOBAL_LIBS:=
EXTRA_LIBS:=
DEBUG_LIBS:=
RELEASE_LIBS:=

ifeq ($(OS),Windows_NT)
SUDO:=
STATIC_LIBRARY_SUFFIX:=.a
SHARED_LIBRARY_SUFFIX:=.dll
APPLICATION_SUFFIX:=
else
SUDO:=sudo
STATIC_LIBRARY_SUFFIX:=.a
SHARED_LIBRARY_SUFFIX:=.so
APPLICATION_SUFFIX:=
endif

ROOTDIR:=$(shell echo | $(CPP) -E -Wp,-v - 2>&1 | grep -E "^ +/.*usr/include$$" | sed -E "s/^ +([^ ]*\/)usr\/include/\1/")
PREFIX:=$(ROOTDIR)usr$(shell grep -h -E "^/.*usr/local/lib$$" /etc/ld.so.conf.d/* 2>/dev/null >/dev/null && echo "/local")

OBJECTS:=
HEADERS:=

DEBUG_OBJDIR:=debug/objs
DEBUG_LIBDIR:=debug/libs
DEBUG_BINDIR:=debug/bin

RELEASE_OBJDIR:=objs
RELEASE_LIBDIR:=libs
RELEASE_BINDIR:=bin

CLEANFILES:=

DEBUG_TARGETS:=
RELEASE_TARGETS:=

INSTALLEDLIBS:=
INSTALLEDHEADERS:=
INSTALLEDPKGCONFIG:=
INSTALLEDSHAREFILES:=
INSTALLEDBINARIES:=
UNINSTALLFILES:=
NONINSTALLEDBINARIES:=

makevar=$(subst /,_,$(subst .,_,$(subst -,_,$(1))))
pkgcflags=$(shell pkg-config --cflags $(1))
pkgcxxflags=$(shell pkg-config --cflags $(1)-cxx)
pkglibs=$(shell pkg-config --libs $(1))
staticlib=$(subst $(2),$(2)-static,$(1))

LOGNAME=$(shell whoami)
